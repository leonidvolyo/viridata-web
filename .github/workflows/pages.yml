name: Deploy React frontend to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (v20)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Install app deps (tolerate peer ranges due to React 19 + older libs)
      - name: Install deps
        working-directory: frontend
        run: |
          if [ -f package-lock.json ]; then
            npm ci --legacy-peer-deps
          else
            npm install --legacy-peer-deps
          fi

      # Ajv toolchain pin for CRA/CRACO/webpack (fixes "ajv/dist/compile/codegen")
      - name: Pin Ajv toolchain
        working-directory: frontend
        run: npm install -D ajv@^6.12.6 ajv-keywords@^3.5.2 --legacy-peer-deps

      - name: Build
        working-directory: frontend
        env:
          # Keep this if using https://<user>.github.io/<repo>/
          # Remove it if deploying to a custom domain (with CNAME).
          PUBLIC_URL: "/${{ github.event.repository.name }}"
        run: npm run build

      - name: SPA fallback (404.html)
        working-directory: frontend
        run: cp build/index.html build/404.html

      # If switching to viridata.eu now, uncomment:
      # - name: Add CNAME
      #   working-directory: frontend
      #   run: echo "viridata.eu" > build/CNAME

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4